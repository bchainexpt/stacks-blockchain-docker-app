version: "2"
services:
  bootstrap:
    image: ${ENVSUBST_IMAGE}
    container_name: ${COMPOSE_PROJECT_NAME}_bootstrap
    working_dir: /srv
    volumes:
      - ./:/srv
    command: sh -c "./setup.sh"
    networks:
      - ${COMPOSE_PROJECT_NAME}
  postgres:
    image: ${POSTGRES_IMAGE}
    container_name: ${POSTGRES_NAME}
    restart: on-failure
    volumes:
      - ${POSTGRES_SCRIPT}:/docker-entrypoint-initdb.d/stacks-node-api.sql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - ${COMPOSE_PROJECT_NAME}
    depends_on:
      - bootstrap
  follower:
    image: ${STACKS_IMAGE}
    container_name: ${STACKS_FOLLOWER_NAME}
    restart: on-failure
    volumes:
      - ${STACKS_FOLLOWER_CONFIG_DIRECTORY}:/src/stacks-node
    ports:
      - ${STACKS_FOLLOWER_RPC_PORT_LOCAL}:${STACKS_FOLLOWER_RPC_PORT}
      - ${STACKS_FOLLOWER_P2P_PORT_LOCAL}:${STACKS_FOLLOWER_P2P_PORT}
    networks:
      - ${COMPOSE_PROJECT_NAME}
    depends_on:
      - api
    command: /bin/stacks-node start --config /src/stacks-node/Config.toml
  api:
    image: ${API_IMAGE}
    container_name: ${API_NAME}
    restart: always
    volumes:
      - ${API_BNS_DATA_LOCAL}:${API_BNS_DATA}
      - ./setup-bns.sh:/setup-bns.sh
    ports:
      - ${API_STACKS_BLOCKCHAIN_API_PORT_LOCAL}:${API_STACKS_BLOCKCHAIN_API_PORT}
    environment:
      - NODE_ENV=${API_NODE_ENV}
      - GIT_TAG=${API_GIT_TAG}
      - PG_HOST=${POSTGRES_NAME}.${COMPOSE_PROJECT_NAME}
      - PG_PORT=${POSTGRES_PORT}
      - PG_USER=${API_PG_USER}
      - PG_PASSWORD=${POSTGRES_PASSWORD}
      - PG_DATABASE=${API_PG_DATABASE}
      - PG_SCHEMA=${API_PG_SCHEMA}
      - STACKS_CHAIN_ID=${API_STACKS_CHAIN_ID}
      - V2_POX_MIN_AMOUNT_USTX=${API_V2_POX_MIN_AMOUNT_USTX}
      - STACKS_CORE_EVENT_PORT=${API_STACKS_CORE_EVENT_PORT}
      - STACKS_CORE_EVENT_HOST=${API_STACKS_CORE_EVENT_HOST}
      - STACKS_BLOCKCHAIN_API_PORT=${API_STACKS_BLOCKCHAIN_API_PORT}
      - STACKS_BLOCKCHAIN_API_HOST=${API_STACKS_BLOCKCHAIN_API_HOST}
      - STACKS_BLOCKCHAIN_API_DB=${API_STACKS_BLOCKCHAIN_API_DB}
      - STACKS_CORE_RPC_HOST=${STACKS_FOLLOWER_NAME}.${COMPOSE_PROJECT_NAME}
      - STACKS_CORE_RPC_PORT=${STACKS_FOLLOWER_RPC_PORT}
      - BNS_IMPORT_DIR=/bns-data
    command: sh -c "/setup-bns.sh; npm run start"
    networks:
      - ${COMPOSE_PROJECT_NAME}
    depends_on:
      - postgres
networks:
  mocknet:
    driver: bridge
    name: ${COMPOSE_PROJECT_NAME}
#